from typing import Literal

import numpy as np

from ._objects import ObjectID

class TypeID(ObjectID): ...

def get_config() -> None: ...
def check_dtype() -> None: ...
def check_enum_dtype() -> None: ...
def check_opaque_dtype() -> None: ...
def check_ref_dtype() -> None: ...
def check_string_dtype() -> None: ...
def check_vlen_dtype() -> None: ...
def enum_dtype() -> None: ...
def opaque_dtype() -> None: ...
def ref_dtype() -> None: ...
def regionref_dtype() -> None: ...
def special_dtype() -> None: ...
def vlen_dtype() -> None: ...
def string_dtype(encoding: Literal["utf-8", "ascii"] = "utf-8", length: int | None = None) -> np.dtype[np.generic]: ...
